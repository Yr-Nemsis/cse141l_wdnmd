100001010   //$1 = 2 (0000 0010)
000010010   //$2 = 4 (0000 0100)
111001010   //$1 = 0010 0000 = 32 (in decimal)
101001001   //$1 = pattern = data_mem[32]
100011111   //$3 = 0000 0111
100100001   //$4 = 0000 0001
111011100   //$3 = 0000 1110
000011100   //$3 = 0000 1111
111011010   //$3 = 1111 0000
100101011   //$5 = 0000 0011
111100101   //$4 = 0000 1000
000011100   //$3 = 1111 1000
001001011   //$1 = pattern & 1111 1000
100100000   //$4 = 0000 0000 = num_pattern
100000000   //$r0 = 0000 0000 = index
100101000   //$5 = 0000 0000 = i
101110000   //$6 = data_mem[index]
100111000
000111110
111111101   //$7 = data_mem[index] << i
001111011   //$7 = $7 && 1111 1000
100110000
000110001
011000000   //PC = PC + 11
100111001
000101111   //i++
100110000
000110101
100111000
000111010
011000001   //PC = PC + 15
100110000
100111000
011000010   //PC = PC - 17
100111001
000100111   //$4 = num_pattern++
000101111   //i++
100110000
000110101
100111000
000111010
011000011   //PC = PC + 4
100110000
100111000
011000100   //PC = PC - 28
100101001
000000101   //$r0 = index++
100110010
111110010   //$6 = 32
100111$r0
011000011   //PC = PC + 4
100110000
100111000
011000101   //PC = PC - 38
100101010   //$1 = 0000 0010
111101010   //$1 = 0010 0000 = 32 (in decimal)
100110001
000101110   //$5 = 33 (in decimal)
110100101   //data_mem[33] = num_pattern
100100000   //$4 = 0000 0000 = num_byte
100000000   //$0 = 0000 0000 = index
100101000   //$5 = 0000 0000 = i
101110000   //$6 = data_mem[index]
100111000
000111110
111111101   //$7 = data_mem[index] << i
001111011   //$7 = $7 && 1111 1000
100110000
000110001
011000000   //PC = PC + 11
100111001
000101111   //i++
100110000
000110101
100111000
000111010
011000110   //PC = PC + 6
100110000
100111000
011000010   //PC = PC - 17
100111001
000100111   //$4 = num_pattern++
100101001
000000101   //$0 = index++
100110010
111110010   //$6 = 32
100111000
000111000
011000011   //PC = PC  + 4
100110000
100111000
011000111   //PC = PC - 30
100101010   //$1 = 0000 0010
111101010   //$1 = 0010 0000 = 32 (in decimal)
100110010
000101110   //$5 = 34 (in decimal)
110100101   //data_mem[34] = num_byte
100100000   //$4 = 0000 0000 = num_pattern
100000000   //$0 = 0000 0000 = index
100101000   //$5 = 0000 0000 = i
101110000   //$6 = data_mem[index]
100111000
000111110
111111101   //$7 = data_mem[index] << i
001111011   //$7 = $7 && 1111 1000
100110000
000110001
011000000   //PC = PC + 11
100111001
000101111   //i++
100110000
000110101
100111000
000111010
011000001   //PC = PC + 15
100110000
100111000
011001000   //PC = PC - 18
100111001
000100111   //$4 = num_pattern++
000101111   //i++
100110000
000110101
100111000
000111010
011001001   //PC = PC - 26
100110000
100111000
011001010   //PC = PC - 29
100101001
000000101   //$0 = index++
100110010
111110010   //$6 = 32
100111000
000111000
011000011   //PC = PC + 4
100110000
100111000
011001011   //PC = PC - 39
100000000   //$0 = 0000 0000 = index
100101000   //$5 = 0000 0000 = i
100111000
000111000
100110001
000111110
101111111   //$7 = data_mem[index+1]
001111011   //$7 = data_mem[index+1] & 1111 0000
111111010
100110000
000110111
101111000   //$6 = data_mem[index]
111111010
001111011
111111010
000110111   //last four bits from data_mem[index] + first four bits from data_mem[index + 1]
100111000
000111110
111111101   //$7 = mid_byte << i
001111011   //$7 = $7 && 1111 1000
100110000
000110001
011000000   //PC = PC + 11
100111001
000101111   //i++
100110000
000110101
100111000
000111010
011000001   //PC = PC + 15
100110000
100111000
011000111   //PC = PC - 30
100111001
000100111   //$4 = total_pattern++
000101111   //i++
100110000
000110101
100111000
000111010
011000011   //PC = PC + 4
100110000
100111000
011001100   //PC = PC - 41
100101001
000000101   //$0 = index++
100110111
100101010
111110101   //$6 = 0001 1100
100101011
000110101   //$6 = 31 (0001 1111)
100111000
000111000
011000011   //PC = PC + 4
100110000
100111000
011001101   //PC = PC - 54
100101010   //$1 = 0000 0010
111101010   //$1 = 0010 0000 = 32 (in decimal)
100110100
000101110   //$5 = 34 (in decimal)
110100101   //data_mem[34] = total_pattern
